# -*- coding: utf8 -*-
from qtpy import QtWidgets, QtGui, QtCore


class PulsedHeatingWidget(QtWidgets.QGroupBox):
    def __init__(self, *args, **kwargs):
        super(PulsedHeatingWidget, self).__init__(*args, **kwargs)

        self.ten_percent_btn = QtWidgets.QPushButton('10%')
        self.zero_btn = QtWidgets.QPushButton('Zero')
        self.laser_percent_tweak_le = QtWidgets.QLineEdit('0.1')
        self.ds_increase_percent_btn = QtWidgets.QPushButton('\u25b2')
        self.ds_decrease_percent_btn = QtWidgets.QPushButton('\u25bc')
        self.us_increase_percent_btn = QtWidgets.QPushButton('\u25b2')
        self.us_decrease_percent_btn = QtWidgets.QPushButton('\u25bc')
        self.both_increase_percent_btn = QtWidgets.QPushButton('\u25b2')
        self.both_decrease_percent_btn = QtWidgets.QPushButton('\u25bc')
        self.start_pulse_btn = QtWidgets.QPushButton('Start')
        self.stop_pulse_btn = QtWidgets.QPushButton('Stop')
        self.start_timing_btn = QtWidgets.QPushButton('Adjustment')
        self.measure_temperature_cb = QtWidgets.QCheckBox('measure T?')
        self.measure_diffraction_cb = QtWidgets.QCheckBox('measure XRD?')
        self.ds_enable_pulses_cb = QtWidgets.QCheckBox('Enable?')
        self.us_enable_pulses_cb = QtWidgets.QCheckBox('Enable?')
        self.ds_lbl = QtWidgets.QLabel('down-stream')
        self.us_lbl = QtWidgets.QLabel('up-stream')
        self.ds_percent_display_le = QtWidgets.QLineEdit('0.0')
        self.us_percent_display_le = QtWidgets.QLineEdit('0.0')
        self.percent_lbl = QtWidgets.QLabel('%')

        self.width_lbl = QtWidgets.QLabel('width, \xB5s')
        self.ds_width_le = QtWidgets.QLineEdit('1')
        self.us_width_le = QtWidgets.QLineEdit('1')
        self.delay_lbl = QtWidgets.QLabel('delay, \xB5s')
        self.ds_delay_le = QtWidgets.QLineEdit('0')
        self.us_delay_le = QtWidgets.QLineEdit('0')

        self.manual_delay_step_button_group = QtWidgets.QButtonGroup()
        self.manual_delay_step_size_1_btn = QtWidgets.QPushButton('1')
        self.manual_delay_step_size_0p1_btn = QtWidgets.QPushButton('0.1')
        self.manual_delay_step_size_0p01_btn = QtWidgets.QPushButton('0.01')
        self.manual_delay_step_size_0p001_btn = QtWidgets.QPushButton('0.001')
        self.manual_delay_step_btns = [self.manual_delay_step_size_1_btn, self.manual_delay_step_size_0p1_btn,
                                       self.manual_delay_step_size_0p01_btn, self.manual_delay_step_size_0p001_btn]
        for manual_delay_step_btn in self.manual_delay_step_btns:
            self.manual_delay_step_button_group.addButton(manual_delay_step_btn)
        self.manual_delay_step_size_1_btn.setChecked(True)

        self.ds_us_manual_delay_lbl = QtWidgets.QLabel('DS-->US delay, \xB5s')
        self.gate_manual_delay_lbl = QtWidgets.QLabel('Gate delay, \xB5s')
        self.ds_us_manual_delay_sb = QtWidgets.QDoubleSpinBox()
        self.gate_manual_delay_sb = QtWidgets.QDoubleSpinBox()

        self._layout = QtWidgets.QVBoxLayout()
        self._grid_layout = QtWidgets.QGridLayout()
        self.caption = QtWidgets.QLabel('Pulsed Laser Heating')
        self._layout.addWidget(self.caption)
        self._layout.addLayout(self._grid_layout)

        self._grid_layout.addWidget(self.start_timing_btn, 0, 0, 1, 1)
        self._grid_layout.addWidget(self.stop_pulse_btn, 0, 3, 2, 2)
        self._grid_layout.addWidget(self.start_pulse_btn, 0, 7, 1, 1)
        self._grid_layout.addWidget(self.ten_percent_btn, 1, 0)
        self._grid_layout.addWidget(self.zero_btn, 1, 7)
        self._grid_layout.addWidget(self.both_increase_percent_btn, 2, 3, 1, 2)
        self._grid_layout.addWidget(self.ds_enable_pulses_cb, 3, 0, 1, 1)
        self._grid_layout.addWidget(self.ds_lbl, 3, 1, 1, 1)
        self._grid_layout.addWidget(self.laser_percent_tweak_le, 3, 3, 1, 2)
        self._grid_layout.addWidget(self.us_lbl, 3, 6, 1, 1)
        self._grid_layout.addWidget(self.us_enable_pulses_cb, 3, 7, 1, 1)
        self._grid_layout.addWidget(self.ds_decrease_percent_btn, 4, 0)
        self._grid_layout.addWidget(self.ds_increase_percent_btn, 4, 1)
        self._grid_layout.addWidget(self.both_decrease_percent_btn, 4, 3, 1, 2)
        self._grid_layout.addWidget(self.us_decrease_percent_btn, 4, 6)
        self._grid_layout.addWidget(self.us_increase_percent_btn, 4, 7)
        self._grid_layout.addWidget(self.ds_percent_display_le, 5, 0, 1, 2)
        self._grid_layout.addWidget(self.percent_lbl, 5, 2, 1, 4)
        self._grid_layout.addWidget(self.us_percent_display_le, 5, 6, 1, 2)
        self._grid_layout.addWidget(self.ds_width_le, 6, 0, 1, 2)
        self._grid_layout.addWidget(self.width_lbl, 6, 2, 1, 4)
        self._grid_layout.addWidget(self.us_width_le, 6, 6, 1, 2)
        self._grid_layout.addWidget(self.ds_delay_le, 7, 0, 1, 2)
        self._grid_layout.addWidget(self.delay_lbl, 7, 2, 1, 4)
        self._grid_layout.addWidget(self.us_delay_le, 7, 6, 1, 2)
        self._grid_layout.addWidget(self.ds_us_manual_delay_lbl, 8, 0, 1, 1)
        self._grid_layout.addWidget(self.ds_us_manual_delay_sb, 8, 1, 1, 1)
        self._grid_layout.addWidget(self.manual_delay_step_size_1_btn, 8, 2, 1, 1)
        self._grid_layout.addWidget(self.manual_delay_step_size_0p1_btn, 8, 3, 1, 1)
        self._grid_layout.addWidget(self.manual_delay_step_size_0p01_btn, 8, 4, 1, 1)
        self._grid_layout.addWidget(self.manual_delay_step_size_0p001_btn, 8, 5, 1, 1)
        self._grid_layout.addWidget(self.gate_manual_delay_lbl, 8, 6, 1, 1)
        self._grid_layout.addWidget(self.gate_manual_delay_sb, 8, 7, 1, 1)

        self.setLayout(self._layout)

        self.style_widgets()

    def style_widgets(self):
        self.stop_pulse_btn.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        self.stop_pulse_btn.setStyleSheet("font: bold 16px; black;")
        self.ds_enable_pulses_cb.setChecked(True)
        self.us_enable_pulses_cb.setChecked(True)
        self.laser_percent_tweak_le.setValidator(QtGui.QDoubleValidator())
        self.ds_lbl.setAlignment(QtCore.Qt.AlignCenter)
        self.us_lbl.setAlignment(QtCore.Qt.AlignCenter)
        self.ds_percent_display_le.setEnabled(False)
        self.us_percent_display_le.setEnabled(False)
        self.ds_percent_display_le.setAlignment(QtCore.Qt.AlignCenter)
        self.us_percent_display_le.setAlignment(QtCore.Qt.AlignCenter)
        self.percent_lbl.setAlignment(QtCore.Qt.AlignCenter)
        self.ds_percent_display_le.setStyleSheet("font: bold; color: black;")
        self.us_percent_display_le.setStyleSheet("font: bold; color: black;")
        self.ds_width_le.setEnabled(False)
        self.us_width_le.setEnabled(False)
        self.ds_delay_le.setEnabled(False)
        self.us_delay_le.setEnabled(False)
        self.ds_width_le.setAlignment(QtCore.Qt.AlignCenter)
        self.us_width_le.setAlignment(QtCore.Qt.AlignCenter)
        self.ds_delay_le.setAlignment(QtCore.Qt.AlignCenter)
        self.us_delay_le.setAlignment(QtCore.Qt.AlignCenter)
        self.delay_lbl.setAlignment(QtCore.Qt.AlignCenter)
        self.width_lbl.setAlignment(QtCore.Qt.AlignCenter)
        self.ds_us_manual_delay_sb.setSingleStep(1.0)
        self.ds_us_manual_delay_sb.setValue(0.0)
        self.gate_manual_delay_sb.setSingleStep(1.0)
        self.gate_manual_delay_sb.setValue(0.0)

    def update_timing_labels(self, timings):
        self.ds_delay_le.setText(str(round(timings['delay_t1'] * 1E6, 2)))
        self.us_delay_le.setText(str(round(timings['delay_t2'] * 1E6, 2)))
        self.ds_width_le.setText(str(round(timings['width_t1'] * 1E6, 2)))
        self.us_width_le.setText(str(round(timings['width_t2'] * 1E6, 2)))
